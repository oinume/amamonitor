// Package model contains the types for schema 'amamonitor'.
package model

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// Provider is the 'provider' enum type from schema 'amamonitor'.
type Provider uint16

const (
	// ProviderAmaten is the 'amaten' Provider.
	ProviderAmaten = Provider(1)
)

// String returns the string value of the Provider.
func (p Provider) String() string {
	var enumVal string

	switch p {
	case ProviderAmaten:
		enumVal = "amaten"
	}

	return enumVal
}

// MarshalText marshals Provider into text.
func (p Provider) MarshalText() ([]byte, error) {
	return []byte(p.String()), nil
}

// UnmarshalText unmarshals Provider from text.
func (p *Provider) UnmarshalText(text []byte) error {
	switch string(text) {
	case "amaten":
		*p = ProviderAmaten

	default:
		return errors.New("invalid Provider")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for Provider.
func (p Provider) Value() (driver.Value, error) {
	return p.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for Provider.
func (p *Provider) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid Provider")
	}

	return p.UnmarshalText(buf)
}
